#define _CRT_SECURE_NO_WARNINGS

//BCD数是用一个字节来表达两位十进制的数，每四个比特表示一位。所以如果一个BCD数的十六进制是0x12，它表达的就是十进制的12。但是小明没学过BCD，把所有的BCD数都当作二进制数转换成十进制输出了。于是BCD的0x12被输出成了十进制的18了！
//
//现在，你的程序要读入这个错误的十进制数，然后输出正确的十进制数。提示：你可以把18转换回0x12，然后再转换回12。
//
//输入格式：
//输入在一行中给出一个[0, 153]范围内的正整数，保证能转换回有效的BCD数，也就是说这个整数转换成十六进制时不会出现A - F的数字。
//
//输出格式：
//输出对应的十进制数。
//
//输入样例：
//18
//输出样例：
//12


//18->1 0010->0x12
//18/16=1...2
//1/16=0...1
//1*10+2*1=12
#include<stdio.h>
int main()
{
	int num; 
	int remainder;
	int cnt = 0;
	int i;
	scanf("%d", &num);
	
	for (i = 1; num > 0; i *= 10)
	{
		remainder = num % 16;
		cnt += i * remainder;
		num /= 16;
	}
	printf("%d\n", cnt);
	return 0;
}

//#include<stdio.h>
//int main()
//{
//    int num;
//    scanf("%d", &num);
//    int cnt = 0, i = 1;
//    while (num)
//    {
//        cnt += i * (num % 16);
//        i *= 10;
//        num /= 16;
//    }
//    printf("%d\n", cnt);
//    return 0;
//}
